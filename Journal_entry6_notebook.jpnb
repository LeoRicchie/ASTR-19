{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a389f4b5-24d6-42aa-98b1-eb49af2b9f80",
   "metadata": {},
   "outputs": [],
   "source": [
    "import math\n",
    "\n",
    "def calculate_sin(x):\n",
    "    return math.sin(x)\n",
    "\n",
    "def calculate_cos(x):\n",
    "    return math.cos(x)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "857a843f-d873-45ff-b216-b1c9ebe47899",
   "metadata": {},
   "outputs": [],
   "source": [
    "def generate_sin_cos_table(start_x, end_x, num_entries):\n",
    "    # Calculate the step size\n",
    "    step_size = (end_x - start_x) / (num_entries - 1)\n",
    "\n",
    "    x_values = []\n",
    "    sin_values = []\n",
    "    cos_values = []\n",
    "\n",
    "    # Generate the sin(x) and cos(x) values\n",
    "    for i in range(num_entries):\n",
    "        x = start_x + i * step_size\n",
    "        sin_x = calculate_sin(x)\n",
    "        cos_x = calculate_cos(x)\n",
    "\n",
    "        x_values.append(x)\n",
    "        sin_values.append(sin_x)\n",
    "        cos_values.append(cos_x)\n",
    "\n",
    "    return x_values, sin_values, cos_values\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6bd50bd-4409-4545-8e60-057f8ad50248",
   "metadata": {},
   "source": [
    "The first two cells define the fucntions needed to calculate cos(x) and sin(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fb20d299-77ac-4f5c-884a-1eaa6dda35f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x         sin(x)         cos(x)         \n",
      "0.0000    0.0000         1.0000         \n",
      "0.0020    0.0020         1.0000         \n",
      "0.0040    0.0040         1.0000         \n",
      "0.0060    0.0060         1.0000         \n",
      "0.0080    0.0080         1.0000         \n",
      "0.0100    0.0100         0.9999         \n",
      "0.0120    0.0120         0.9999         \n",
      "0.0140    0.0140         0.9999         \n",
      "0.0160    0.0160         0.9999         \n",
      "0.0180    0.0180         0.9998         \n"
     ]
    }
   ],
   "source": [
    "# Set the range and number of entries\n",
    "start_x = 0\n",
    "end_x = 2\n",
    "num_entries = 1000\n",
    "\n",
    "# Generate sin(x) and cos(x) values\n",
    "x_values, sin_values, cos_values = generate_sin_cos_table(start_x, end_x, num_entries)\n",
    "\n",
    "# Print the first 10 values in columns\n",
    "print(f\"{'x':<10}{'sin(x)':<15}{'cos(x)':<15}\")\n",
    "for i in range(10):\n",
    "    print(f\"{x_values[i]:<10.4f}{sin_values[i]:<15.4f}{cos_values[i]:<15.4f}\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
